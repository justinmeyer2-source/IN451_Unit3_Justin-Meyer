using System;
using System.Collections.Generic;
using System.Data.SqlClient;

namespace IN451_Unit3_Justin_Meyer.Data
{
    public class NorthwindRepository
    {
        private readonly string _connectionString;

        // Constructor accepts a connection string
        public NorthwindRepository(string connectionString)
        {
            _connectionString = connectionString ?? throw new ArgumentNullException(nameof(connectionString));
        }

        // Returns count of customers
        public int GetCustomerCount()
        {
            const string sql = "SELECT COUNT(*) FROM dbo.Customers;";
            using (var conn = new SqlConnection(_connectionString))
            using (var cmd = new SqlCommand(sql, conn))
            {
                conn.Open();
                return (int)cmd.ExecuteScalar();
            }
        }

        // Returns list of full contact names
        public List<string> GetCustomerNames()
        {
            const string sql = "SELECT ContactName FROM dbo.Customers ORDER BY ContactName;";
            var results = new List<string>();
            using (var conn = new SqlConnection(_connectionString))
            using (var cmd = new SqlCommand(sql, conn))
            {
                conn.Open();
                using (var rdr = cmd.ExecuteReader())
                {
                    while (rdr.Read())
                    {
                        var name = rdr.IsDBNull(0) ? string.Empty : rdr.GetString(0);
                        if (!string.IsNullOrWhiteSpace(name))
                            results.Add(name);
                    }
                }
            }
            return results;
        }

        // Returns list of last names derived from ContactName
        public List<string> GetCustomerLastNames()
        {
            var lastNames = new List<string>();
            const string sql = "SELECT ContactName FROM dbo.Customers WHERE ContactName IS NOT NULL;";
            using (var conn = new SqlConnection(_connectionString))
            using (var cmd = new SqlCommand(sql, conn))
            {
                conn.Open();
                using (var rdr = cmd.ExecuteReader())
                {
                    while (rdr.Read())
                    {
                        var contact = rdr.GetString(0).Trim();
                        if (string.IsNullOrEmpty(contact)) continue;

                        var parts = contact.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
                        var last = parts.Length > 1 ? parts[parts.Length - 1] : parts[0];
                        lastNames.Add(last);
                    }
                }
            }
            lastNames.Sort(StringComparer.CurrentCultureIgnoreCase);
            return lastNames;
        }
    }
}
